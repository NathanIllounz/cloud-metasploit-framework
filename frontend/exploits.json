[
  {
    "id": "simple-ping",
    "title": "Simple ICMP Check (demo)",
    "exploit": "auxiliary/scanner/ping_sweep",
    "description": "Basic ICMP reachability check used for classroom demonstrations. It tests whether hosts respond to ping and reports latency. Designed for non-invasive network mapping and classroom exercises where students must identify live hosts prior to further analysis.",
    "required_fields": ["rhost"],
    "payloads": [],
    "notes": "Use in simulate or lab-only mode. No LHOST/LPORT needed."
  },
  {
    "id": "smb-ms17-010",
    "title": "Windows SMB (ms17_010) - Example",
    "exploit": "exploit/windows/smb/ms17_010_eternalblue",
    "description": "Educational reproduction of the MS17-010 SMB remote code execution scenario. Demonstrates buffer-overflow exploitation of outdated SMB stacks, payload staging and post-exploitation tasks such as Meterpreter sessions and basic reconnaissance.",
    "required_fields": ["rhost","rport","payload"],
    "payloads": ["windows/x64/meterpreter/reverse_tcp","windows/shell/reverse_tcp"],
    "notes": "Only use against lab VMs. Set LHOST/LPORT for reverse payloads."
  },
  {
    "id": "unix-ftp-proftpd",
    "title": "ProFTPD mod_copy (example)",
    "exploit": "exploit/unix/ftp/proftpd_modcopy_exec",
    "description": "Remote code execution scenario against vulnerable ProFTPD installations using the mod_copy module. Useful to teach exploitation of misconfigured services and demonstrate the differences between command-based shells and staged payloads.",
    "required_fields": ["rhost","rport"],
    "payloads": ["cmd/unix/reverse","linux/x86/meterpreter/reverse_tcp"],
    "notes": "Some payloads require setting LHOST/LPORT."
  },
  {
    "id": "reverse-shell-tcp",
    "title": "Generic Reverse Shell (teaching)",
    "exploit": "exploit/multi/handler",
    "description": "Handler module that accepts reverse shells from compromised hosts. Used in labs to coordinate payload handlers with delivered payloads, demonstrate listener configuration and show how reverse connections traverse network address translation.",
    "required_fields": ["lhost","lport","payload"],
    "payloads": ["windows/shell_reverse_tcp","linux/x86/shell_reverse_tcp"],
    "notes": "Run handler in lab and then trigger payload from target VM."
  },
  {
    "id": "tomcat-deploy",
    "title": "Tomcat Manager Deploy (example)",
    "exploit": "exploit/multi/http/tomcat_mgr_deploy",
    "description": "Uses a Tomcat manager interface to deploy a malicious WAR file for remote code execution. Demonstrates web-application misconfiguration impact and the importance of securing management endpoints in web servers.",
    "required_fields": ["rhost","rport","payload"],
    "payloads": ["java/meterpreter/reverse_tcp"],
    "notes": "Ensure lab VM has Tomcat manager enabled for testing."
  },
  {
    "id": "smb-ms08-067",
    "title": "Windows SMB ms08_067 (classic)",
    "exploit": "exploit/windows/smb/ms08_067_netapi",
    "description": "Historic vulnerability used to teach legacy exploit techniques and show how patching prevents widespread wormable attacks. Useful to explain pre-auth remote code execution and demonstrate payload delivery mechanics on legacy images.",
    "required_fields": ["rhost","rport","payload"],
    "payloads": ["windows/shell/reverse_tcp","windows/meterpreter/reverse_tcp"],
    "notes": "Target must be legacy vulnerable VM image."
  },
  {
    "id": "php-cgi-arg-injection",
    "title": "PHP CGI Argument Injection (example)",
    "exploit": "exploit/multi/http/php_cgi_arg_injection",
    "description": "Illustrates argument injection into older PHP-CGI deployments that can lead to remote code execution. The module highlights how web server configurations can make seemingly minor setups exploitable.",
    "required_fields": ["rhost","rport","payload"],
    "payloads": ["php/meterpreter/reverse_tcp"],
    "notes": "Lab-only usage."
  },
  {
    "id": "jenkins-script-console",
    "title": "Jenkins Script Console (example)",
    "exploit": "exploit/multi/http/jenkins_script_console",
    "description": "Demonstrates abuse of Jenkins administrative script consoles to execute arbitrary Groovy code. Emphasizes the risks of unsecured admin interfaces and the need for role-based access control on CI/CD infrastructure.",
    "required_fields": ["rhost","rport"],
    "payloads": [],
    "notes": "Requires Jenkins admin access on the target VM."
  },
  {
    "id": "http-put-deploy",
    "title": "HTTP PUT Deploy (example)",
    "exploit": "exploit/multi/http/http_put",
    "description": "Shows how permissive HTTP servers allowing PUT requests can enable direct file uploads and remote deployment of payloads. Good for discussing secure HTTP configuration and the consequences of overly-permissive methods.",
    "required_fields": ["rhost","rport","payload"],
    "payloads": ["php/meterpreter/reverse_tcp","python/meterpreter/reverse_tcp"],
    "notes": "Only on lab servers configured for PUT uploads."
  }
]
